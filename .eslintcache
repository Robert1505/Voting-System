[{"D:\\voting-system\\src\\index.js":"1","D:\\voting-system\\src\\PreparingPage.js":"2","D:\\voting-system\\src\\actions.js":"3","D:\\voting-system\\src\\Components\\PreparingPage\\Question.js":"4","D:\\voting-system\\src\\Components\\Results\\Chart.js":"5","D:\\voting-system\\src\\reducers.js":"6","D:\\voting-system\\src\\Components\\PreparingPage\\ListOption.js":"7","D:\\voting-system\\src\\Results.js":"8","D:\\voting-system\\src\\Components\\Title.js":"9","D:\\voting-system\\src\\Components\\PreparingPage\\InputField.js":"10","D:\\voting-system\\src\\App.js":"11","D:\\voting-system\\src\\Components\\VotePage\\ListVote.js":"12","D:\\voting-system\\src\\VotePage.js":"13","D:\\voting-system\\src\\axios.js":"14"},{"size":641,"mtime":1610113005198,"results":"15","hashOfConfig":"16"},{"size":2080,"mtime":1609678338605,"results":"17","hashOfConfig":"16"},{"size":1137,"mtime":1610267384430,"results":"18","hashOfConfig":"16"},{"size":243,"mtime":1610107355186,"results":"19","hashOfConfig":"16"},{"size":2699,"mtime":1609677764060,"results":"20","hashOfConfig":"16"},{"size":1448,"mtime":1610267105442,"results":"21","hashOfConfig":"16"},{"size":1330,"mtime":1610266005742,"results":"22","hashOfConfig":"16"},{"size":1182,"mtime":1609664853813,"results":"23","hashOfConfig":"16"},{"size":229,"mtime":1607519004794,"results":"24","hashOfConfig":"16"},{"size":2877,"mtime":1607849527518,"results":"25","hashOfConfig":"16"},{"size":1310,"mtime":1609664807324,"results":"26","hashOfConfig":"16"},{"size":4275,"mtime":1609679321943,"results":"27","hashOfConfig":"16"},{"size":1138,"mtime":1609664294866,"results":"28","hashOfConfig":"16"},{"size":158,"mtime":1610267591061,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1irax4t",{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"35"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"53"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\voting-system\\src\\index.js",[],"D:\\voting-system\\src\\PreparingPage.js",["66","67"],"import React, {useEffect} from 'react';\r\nimport InputField from './Components/PreparingPage/InputField';\r\nimport Title from './Components/Title';\r\nimport Question from './Components/PreparingPage/Question';\r\nimport ListOption from './Components/PreparingPage/ListOption';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport {Link} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport axios from 'axios';\r\nimport {getLatestQuestion, submitQuestion} from './actions';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        background: 'linear-gradient(45deg, #9e9e9e 30%, #616161 90%)',\r\n        border: 0,\r\n        borderRadius: 3,\r\n        boxShadow: '0 3px 5px 2px rgb(203,203,203)',\r\n        color: 'white',\r\n        height: 48,\r\n        padding: '0 30px',\r\n    },\r\n});\r\n\r\n\r\nfunction PreparingPage(props) {\r\n\r\n    const classes = useStyles();\r\n\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <Title value = \"Voting System\" />\r\n            <InputField />\r\n            <div className = \"flex\">\r\n                <div className = \"flex-1\">\r\n                    <Question question = {props.question} />\r\n                </div>\r\n                <div className = \"flex-1\">\r\n                    <ListOption options = {props.options} />\r\n                </div>\r\n            </div>\r\n            <div className = \"text-center absolute inset-x-0 bottom-0 mb-8\">\r\n                <Button onClick = {() => submitQuestion(props.question, props.options)} className={classes.root}>Submit Question</Button>\r\n                <div className = \"mt-2\">\r\n                    <Link to = '/vote'>\r\n                        <Button className={classes.root}>Vote</Button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        options: state.options.options,\r\n        question: state.options.question\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,{\r\n    getLatestQuestion, submitQuestion\r\n})(PreparingPage);\r\n",["68","69"],"D:\\voting-system\\src\\actions.js",[],"D:\\voting-system\\src\\Components\\PreparingPage\\Question.js",[],"D:\\voting-system\\src\\Components\\Results\\Chart.js",["70","71","72"],"import React, { useEffect, useState } from \"react\";\r\nimport { PieChart, Pie, Tooltip, Cell } from \"recharts\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { getLatestQuestion } from \"../../actions\";\r\n\r\nconst useStyles = makeStyles({\r\n  chartContainer: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n\r\nconst Chart = (props) => {\r\n  const classes = useStyles();\r\n  const [data, setData] = useState([]);\r\n  console.log(\"data\", data);\r\n\r\n  useEffect(() => {\r\n    props.getLatestQuestion();\r\n    generateData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    generateData();\r\n  }, [props.options]);\r\n\r\n  // const data = [\r\n  //     {name: \"Facebook\", value: 10000},\r\n  //     {name: \"Instagram\", value: 100020},\r\n  //     {name: \"Milmoi\", value: 100100},\r\n  // ]\r\n\r\n  const generateData = () => {\r\n    const tempData = [];\r\n    props.options.forEach((option) => {\r\n      tempData.push({\r\n        name: option.name,\r\n        value: option.votes,\r\n      });\r\n    });\r\n    setData(tempData);\r\n  };\r\n  const RADIAN = Math.PI / 180;\r\n  const renderCustomizedLabel = ({\r\n    cx,\r\n    cy,\r\n    midAngle,\r\n    innerRadius,\r\n    outerRadius,\r\n    percent,\r\n    index,\r\n  }) => {\r\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n    return (\r\n      <text\r\n        x={x}\r\n        y={y}\r\n        fill=\"white\"\r\n        textAnchor={x > cx ? \"start\" : \"end\"}\r\n        dominantBaseline=\"central\"\r\n        style={{fontSize: \"18px\"}}\r\n      >\r\n        {percent > 0 && `${data[index].name}`} <br></br>\r\n        {percent > 0 && `${(percent * 100).toFixed(0)}%`}\r\n      </text>\r\n    );\r\n  };\r\n  const COLORS = [\"#0088FE\", \"#00C49F\", \"#FFBB28\", \"#FF8042\", \"#33cc33\", \"#0066cc\", \"#cc0099\" , \"#6600ff\", \"#3399ff\" , \"#99ff33\"];\r\n  return (\r\n    <div className={classes.chartContainer}>\r\n\r\n      <PieChart width={400} height={400}>\r\n        <Pie\r\n          data={data}\r\n          cx={200}\r\n          cy={200}\r\n          labelLine={true}\r\n          label={renderCustomizedLabel}\r\n          outerRadius={160}\r\n          fill=\"#8884d8\"\r\n          dataKey=\"value\"\r\n        >\r\n          {data.map((entry, index) => {    \r\n            return <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n          })}\r\n        </Pie>\r\n      </PieChart>\r\n  \r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    options: state.options.options,\r\n    question: state.options.question,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  getLatestQuestion,\r\n})(Chart);\r\n","D:\\voting-system\\src\\reducers.js",[],"D:\\voting-system\\src\\Components\\PreparingPage\\ListOption.js",[],"D:\\voting-system\\src\\Results.js",["73","74","75"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Link} from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport Title from './Components/Title';\r\nimport {connect} from 'react-redux';\r\nimport {resetState} from './actions';\r\nimport Chart from './Components/Results/Chart';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        background: 'linear-gradient(45deg, #9e9e9e 30%, #616161 90%)',\r\n        border: 0,\r\n        borderRadius: 3,\r\n        boxShadow: '0 3px 5px 2px rgb(203,203,203)',\r\n        color: 'white',\r\n        height: 48,\r\n        padding: '0 30px',\r\n    },\r\n});\r\n\r\nfunction Results(props) {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <Title value = \"Results\" />\r\n            \r\n            <div className = \"mb-32\">\r\n                <Title value = {props.question} />\r\n            </div>\r\n            <Chart />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        option: state.options.options,\r\n        question: state.options.question\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    resetState\r\n})(Results);\r\n\r\n\r\n",["76","77"],"D:\\voting-system\\src\\Components\\Title.js",[],["78","79"],"D:\\voting-system\\src\\Components\\PreparingPage\\InputField.js",[],"D:\\voting-system\\src\\App.js",[],"D:\\voting-system\\src\\Components\\VotePage\\ListVote.js",["80"],"import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Favorite from \"@material-ui/icons/Favorite\";\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport FavoriteBorder from \"@material-ui/icons/FavoriteBorder\";\r\nimport {addVote} from '../../actions';\r\nimport {Link} from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        maxWidth: 360,\r\n        backgroundColor: \"transparent\",\r\n        textAlign: \"center\",\r\n        width: \"500px\",\r\n        minHeight: \"100vh\",\r\n        \"& > li\": {\r\n            width: \"500px\"\r\n        }\r\n    },\r\n    textStyle: {\r\n        fontWeight: \"900\",\r\n        textTransform: \"capitalize\",\r\n        fontSize: \"30px\",\r\n        width: \"400px\",\r\n        overflow: \"hidden\"\r\n    },\r\n    listItem: {\r\n        width: \"500px\",\r\n        overflow: \"hidden\",\r\n        display: \"flex\"\r\n    },\r\n    secondary: {\r\n        position: \"inline-block\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\"\r\n    },\r\n    buttonVote: {\r\n      background: 'linear-gradient(45deg, #9e9e9e 30%, #616161 90%)',\r\n      border: 0,\r\n      borderRadius: 3,\r\n      boxShadow: '0 3px 5px 2px rgb(203,203,203)',\r\n      color: 'white',\r\n      height: 48,\r\n      padding: '0 30px',\r\n  },\r\n}));\r\n\r\nexport default function ListVote(props) {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState('');\r\n\r\n    console.log(\"options\", props.options);\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value);\r\n    };\r\n\r\n    const submitVote = () => {\r\n      addVote(value);\r\n    }\r\n\r\n    return (\r\n      <div className=\"mt-32\">\r\n        <div\r\n          style={{\r\n            position: \"absolute\",\r\n            left: \"50%\",\r\n            top: \"70%\",\r\n            transform: \"translate(-50%, -50%)\",\r\n          }}\r\n        >\r\n          <List\r\n            container\r\n            style={{ minHeight: \"100vh\" }}\r\n            dense\r\n            className={classes.root}\r\n          >\r\n          <RadioGroup aria-label=\"gender\" name=\"gender1\" value={value} onChange={handleChange}>\r\n            {props.options.map((option, idx) => {\r\n              const labelId = `checkbox-list-secondary-label-${idx}`;\r\n              return (\r\n                <ListItem key={idx} button className={classes.listItem}>\r\n                  <ListItemText\r\n                    disableTypography\r\n                    id={labelId}\r\n                    primary={\r\n                      <Typography type=\"body2\" className={classes.textStyle}>\r\n                        {option.name}\r\n                      </Typography>\r\n                    }\r\n                  />\r\n                  <ListItemSecondaryAction className={classes.secondary}>\r\n                    <FormControlLabel\r\n                      value={option._id}\r\n                      edge=\"end\"\r\n                      // onChange={handleToggle(idx)}\r\n                      // checked={checked.indexOf(idx) !== -1}\r\n                      inputProps={{ \"aria-labelledby\": labelId }}\r\n                      control={\r\n                        <Radio\r\n                          icon={<FavoriteBorder />}\r\n                          checkedIcon={<Favorite />}\r\n                          name=\"checkedH\"\r\n                        />\r\n                      }\r\n                    />\r\n                  </ListItemSecondaryAction>\r\n                </ListItem>\r\n              );\r\n            })}\r\n            </RadioGroup>\r\n          </List>\r\n        </div>\r\n        <div className = \"text-center absolute inset-x-0 bottom-0 mb-8\">\r\n                <Link to = '/results'>\r\n                    <Button className={classes.buttonVote} onClick={() => submitVote()}>Submit Vote</Button>\r\n                </Link>\r\n            </div>\r\n      </div>\r\n    );\r\n}\r\n","D:\\voting-system\\src\\VotePage.js",["81","82"],"import React from 'react';\r\nimport Title from './Components/Title';\r\nimport ListVote from './Components/VotePage/ListVote';\r\nimport {connect} from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {getLatestQuestion} from './actions';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        background: 'linear-gradient(45deg, #9e9e9e 30%, #616161 90%)',\r\n        border: 0,\r\n        borderRadius: 3,\r\n        boxShadow: '0 3px 5px 2px rgb(203,203,203)',\r\n        color: 'white',\r\n        height: 48,\r\n        padding: '0 30px',\r\n    },\r\n});\r\n\r\nfunction VotePage(props) {\r\n\r\n    React.useEffect(() => {\r\n        props.getLatestQuestion();\r\n    }, [])\r\n\r\n    const classes = useStyles();\r\n    console.log(\"p\", props.question);\r\n    return (\r\n        <div>\r\n            <Title value = {props.question}/>\r\n            <ListVote options = {props.option} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        option: state.options.options,\r\n        question: state.options.question\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    getLatestQuestion\r\n})(VotePage);","D:\\voting-system\\src\\axios.js",[],{"ruleId":"83","severity":1,"message":"84","line":1,"column":16,"nodeType":"85","messageId":"86","endLine":1,"endColumn":25},{"ruleId":"83","severity":1,"message":"87","line":10,"column":8,"nodeType":"85","messageId":"86","endLine":10,"endColumn":13},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"83","severity":1,"message":"92","line":2,"column":25,"nodeType":"85","messageId":"86","endLine":2,"endColumn":32},{"ruleId":"93","severity":1,"message":"94","line":23,"column":6,"nodeType":"95","endLine":23,"endColumn":8,"suggestions":"96"},{"ruleId":"93","severity":1,"message":"97","line":27,"column":6,"nodeType":"95","endLine":27,"endColumn":21,"suggestions":"98"},{"ruleId":"83","severity":1,"message":"99","line":3,"column":9,"nodeType":"85","messageId":"86","endLine":3,"endColumn":13},{"ruleId":"83","severity":1,"message":"100","line":4,"column":8,"nodeType":"85","messageId":"86","endLine":4,"endColumn":14},{"ruleId":"83","severity":1,"message":"101","line":24,"column":11,"nodeType":"85","messageId":"86","endLine":24,"endColumn":18},{"ruleId":"88","replacedBy":"102"},{"ruleId":"90","replacedBy":"103"},{"ruleId":"88","replacedBy":"104"},{"ruleId":"90","replacedBy":"105"},{"ruleId":"83","severity":1,"message":"106","line":1,"column":17,"nodeType":"85","messageId":"86","endLine":1,"endColumn":25},{"ruleId":"93","severity":1,"message":"107","line":25,"column":8,"nodeType":"95","endLine":25,"endColumn":10,"suggestions":"108"},{"ruleId":"83","severity":1,"message":"101","line":27,"column":11,"nodeType":"85","messageId":"86","endLine":27,"endColumn":18},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","no-native-reassign",["109"],"no-negated-in-lhs",["110"],"'Tooltip' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'generateData' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["111"],"React Hook useEffect has a missing dependency: 'generateData'. Either include it or remove the dependency array.",["112"],"'Link' is defined but never used.","'Button' is defined but never used.","'classes' is assigned a value but never used.",["109"],["110"],["109"],["110"],"'useState' is defined but never used.","React Hook React.useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside React.useEffect.",["113"],"no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},"Update the dependencies array to be: [generateData, props]",{"range":"120","text":"121"},"Update the dependencies array to be: [generateData, props.options]",{"range":"122","text":"123"},"Update the dependencies array to be: [props]",{"range":"124","text":"125"},[612,614],"[generateData, props]",[667,682],"[generateData, props.options]",[678,680],"[props]"]