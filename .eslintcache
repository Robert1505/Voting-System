[{"D:\\voting-system\\src\\index.js":"1","D:\\voting-system\\src\\PreparingPage.js":"2","D:\\voting-system\\src\\actions.js":"3","D:\\voting-system\\src\\Components\\PreparingPage\\Question.js":"4","D:\\voting-system\\src\\Components\\Results\\Chart.js":"5","D:\\voting-system\\src\\reducers.js":"6","D:\\voting-system\\src\\Components\\PreparingPage\\ListOption.js":"7","D:\\voting-system\\src\\Results.js":"8","D:\\voting-system\\src\\Components\\Title.js":"9","D:\\voting-system\\src\\Components\\PreparingPage\\InputField.js":"10","D:\\voting-system\\src\\App.js":"11","D:\\voting-system\\src\\Components\\VotePage\\ListVote.js":"12","D:\\voting-system\\src\\VotePage.js":"13","D:\\voting-system\\src\\axios.js":"14"},{"size":526,"mtime":1608553467361,"results":"15","hashOfConfig":"16"},{"size":2080,"mtime":1609678338605,"results":"17","hashOfConfig":"16"},{"size":1085,"mtime":1609678557560,"results":"18","hashOfConfig":"16"},{"size":247,"mtime":1607243667230,"results":"19","hashOfConfig":"16"},{"size":2699,"mtime":1609677764060,"results":"20","hashOfConfig":"16"},{"size":1443,"mtime":1609679041403,"results":"21","hashOfConfig":"16"},{"size":1630,"mtime":1609839126030,"results":"22","hashOfConfig":"16"},{"size":1182,"mtime":1609664853813,"results":"23","hashOfConfig":"16"},{"size":229,"mtime":1607519004794,"results":"24","hashOfConfig":"16"},{"size":2877,"mtime":1607849527518,"results":"25","hashOfConfig":"16"},{"size":1310,"mtime":1609664807324,"results":"26","hashOfConfig":"16"},{"size":4275,"mtime":1609679321943,"results":"27","hashOfConfig":"16"},{"size":1138,"mtime":1609664294866,"results":"28","hashOfConfig":"16"},{"size":159,"mtime":1609676814746,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1irax4t",{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\voting-system\\src\\index.js",[],["65","66"],"D:\\voting-system\\src\\PreparingPage.js",["67","68"],"import React, {useEffect} from 'react';\r\nimport InputField from './Components/PreparingPage/InputField';\r\nimport Title from './Components/Title';\r\nimport Question from './Components/PreparingPage/Question';\r\nimport ListOption from './Components/PreparingPage/ListOption';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport {Link} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport axios from 'axios';\r\nimport {getLatestQuestion, submitQuestion} from './actions';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        background: 'linear-gradient(45deg, #9e9e9e 30%, #616161 90%)',\r\n        border: 0,\r\n        borderRadius: 3,\r\n        boxShadow: '0 3px 5px 2px rgb(203,203,203)',\r\n        color: 'white',\r\n        height: 48,\r\n        padding: '0 30px',\r\n    },\r\n});\r\n\r\n\r\nfunction PreparingPage(props) {\r\n\r\n    const classes = useStyles();\r\n\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <Title value = \"Voting System\" />\r\n            <InputField />\r\n            <div className = \"flex\">\r\n                <div className = \"flex-1\">\r\n                    <Question question = {props.question} />\r\n                </div>\r\n                <div className = \"flex-1\">\r\n                    <ListOption options = {props.options} />\r\n                </div>\r\n            </div>\r\n            <div className = \"text-center absolute inset-x-0 bottom-0 mb-8\">\r\n                <Button onClick = {() => submitQuestion(props.question, props.options)} className={classes.root}>Submit Question</Button>\r\n                <div className = \"mt-2\">\r\n                    <Link to = '/vote'>\r\n                        <Button className={classes.root}>Vote</Button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        options: state.options.options,\r\n        question: state.options.question\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,{\r\n    getLatestQuestion, submitQuestion\r\n})(PreparingPage);\r\n","D:\\voting-system\\src\\actions.js",[],"D:\\voting-system\\src\\Components\\PreparingPage\\Question.js",[],"D:\\voting-system\\src\\Components\\Results\\Chart.js",["69","70","71"],"D:\\voting-system\\src\\reducers.js",[],"D:\\voting-system\\src\\Components\\PreparingPage\\ListOption.js",[],"D:\\voting-system\\src\\Results.js",["72","73","74"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Link} from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport Title from './Components/Title';\r\nimport {connect} from 'react-redux';\r\nimport {resetState} from './actions';\r\nimport Chart from './Components/Results/Chart';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        background: 'linear-gradient(45deg, #9e9e9e 30%, #616161 90%)',\r\n        border: 0,\r\n        borderRadius: 3,\r\n        boxShadow: '0 3px 5px 2px rgb(203,203,203)',\r\n        color: 'white',\r\n        height: 48,\r\n        padding: '0 30px',\r\n    },\r\n});\r\n\r\nfunction Results(props) {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <Title value = \"Results\" />\r\n            \r\n            <div className = \"mb-32\">\r\n                <Title value = {props.question} />\r\n            </div>\r\n            <Chart />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        option: state.options.options,\r\n        question: state.options.question\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    resetState\r\n})(Results);\r\n\r\n\r\n",["75","76"],"D:\\voting-system\\src\\Components\\Title.js",[],"D:\\voting-system\\src\\Components\\PreparingPage\\InputField.js",[],["77","78"],"D:\\voting-system\\src\\App.js",[],"D:\\voting-system\\src\\Components\\VotePage\\ListVote.js",["79"],"D:\\voting-system\\src\\VotePage.js",["80","81"],"import React from 'react';\r\nimport Title from './Components/Title';\r\nimport ListVote from './Components/VotePage/ListVote';\r\nimport {connect} from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {getLatestQuestion} from './actions';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        background: 'linear-gradient(45deg, #9e9e9e 30%, #616161 90%)',\r\n        border: 0,\r\n        borderRadius: 3,\r\n        boxShadow: '0 3px 5px 2px rgb(203,203,203)',\r\n        color: 'white',\r\n        height: 48,\r\n        padding: '0 30px',\r\n    },\r\n});\r\n\r\nfunction VotePage(props) {\r\n\r\n    React.useEffect(() => {\r\n        props.getLatestQuestion();\r\n    }, [])\r\n\r\n    const classes = useStyles();\r\n    console.log(\"p\", props.question);\r\n    return (\r\n        <div>\r\n            <Title value = {props.question}/>\r\n            <ListVote options = {props.option} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        option: state.options.options,\r\n        question: state.options.question\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    getLatestQuestion\r\n})(VotePage);",["82","83"],"D:\\voting-system\\src\\axios.js",[],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":1,"column":16,"nodeType":"90","messageId":"91","endLine":1,"endColumn":25},{"ruleId":"88","severity":1,"message":"92","line":10,"column":8,"nodeType":"90","messageId":"91","endLine":10,"endColumn":13},{"ruleId":"88","severity":1,"message":"93","line":2,"column":25,"nodeType":"90","messageId":"91","endLine":2,"endColumn":32},{"ruleId":"94","severity":1,"message":"95","line":23,"column":6,"nodeType":"96","endLine":23,"endColumn":8,"suggestions":"97"},{"ruleId":"94","severity":1,"message":"98","line":27,"column":6,"nodeType":"96","endLine":27,"endColumn":21,"suggestions":"99"},{"ruleId":"88","severity":1,"message":"100","line":3,"column":9,"nodeType":"90","messageId":"91","endLine":3,"endColumn":13},{"ruleId":"88","severity":1,"message":"101","line":4,"column":8,"nodeType":"90","messageId":"91","endLine":4,"endColumn":14},{"ruleId":"88","severity":1,"message":"102","line":24,"column":11,"nodeType":"90","messageId":"91","endLine":24,"endColumn":18},{"ruleId":"84","replacedBy":"103"},{"ruleId":"86","replacedBy":"104"},{"ruleId":"84","replacedBy":"105"},{"ruleId":"86","replacedBy":"106"},{"ruleId":"88","severity":1,"message":"107","line":1,"column":17,"nodeType":"90","messageId":"91","endLine":1,"endColumn":25},{"ruleId":"94","severity":1,"message":"108","line":25,"column":8,"nodeType":"96","endLine":25,"endColumn":10,"suggestions":"109"},{"ruleId":"88","severity":1,"message":"102","line":27,"column":11,"nodeType":"90","messageId":"91","endLine":27,"endColumn":18},{"ruleId":"84","replacedBy":"110"},{"ruleId":"86","replacedBy":"111"},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'Tooltip' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'generateData' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["114"],"React Hook useEffect has a missing dependency: 'generateData'. Either include it or remove the dependency array.",["115"],"'Link' is defined but never used.","'Button' is defined but never used.","'classes' is assigned a value but never used.",["112"],["113"],["112"],["113"],"'useState' is defined but never used.","React Hook React.useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside React.useEffect.",["116"],["112"],["113"],"no-global-assign","no-unsafe-negation",{"desc":"117","fix":"118"},{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},"Update the dependencies array to be: [generateData, props]",{"range":"123","text":"124"},"Update the dependencies array to be: [generateData, props.options]",{"range":"125","text":"126"},"Update the dependencies array to be: [props]",{"range":"127","text":"128"},[612,614],"[generateData, props]",[667,682],"[generateData, props.options]",[678,680],"[props]"]